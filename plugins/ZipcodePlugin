import pandas as pd
from opencage.geocoder import OpenCageGeocode
import re

"""
The get_confidence_score() function takes in column name as a string value
and a csv column as a list and returns a confidence score on how likely each value 
in the column is a valid US zipcode.

The plugin calculates the score using three parameters: 
column name, format of value passed and external api

input: string list, string value
output: double

"""

def get_confidence_score(col_name, col_values):
     
     #column name check
     colname_check= ("zip" in col_name.lower() or "postal" in col_name.lower())
    
     #Remove null values
     col_values= remove_null(col_values)
     #Remove spaces
     col_values= remove_spaces(col_values)

     scores= []
     for c in col_values:
        
        format_check, api_check= None, None
        format_check= get_format(c)

        if colname_check==True and format_check==True:
            scores.append(100)
        if colname_check==True and format_check==False:
            scores.append(80)
        if (colname_check==False and format_check==True) or (colname_check==False and format_check==False):
           
            api_check= get_api_value(c)
            if api_check==True:
                scores.append(100)
            else:
                scores.append(0)

     if scores:
        return round(sum(scores) / len(scores), 2)
     else:
        return 0
     
def remove_null(col_values):
     null_values= ["", "NAN", "NaN","nan", "Null", None, "NA", "N/A", "na","n/a", "null", "NULL", ]
     col_values= [elem for elem in col_values if elem not in null_values]
     return col_values

def remove_spaces(col_values):
    col_values = [elem.strip() for elem in col_values] 
    return col_values

def get_format(c):
    if (re.match(r"^\d{5}$", c) is not None or re.match(r"^\d{5}-\d{4}$", c) is not None):
        return True
    else:
        return False
    
def get_api_value(c):
    api_key = 'ca67f22d408f4d19b4f9cd066db274be'
    geocoder = OpenCageGeocode(api_key)
    api_result=''

    api_json = geocoder.geocode(c)
    if(api_json!= []):
        api_result= api_json[0]['components']['_type']

    if(api_result=='postcode'):
        return True
    else:
        return False
    
